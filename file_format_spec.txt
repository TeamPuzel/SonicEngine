
The file formats used by the game are very simple.
- The map directory which contains the tiled project provides an extension capable of
writing this custom format.
- Images on the other hand use an uncompressed BGRA-only subset of the TGA image format
which is the only trivially implementable format modern image editors still export.

The following is a fairly intuitive language-like logical representation of the
file structure. The data is not padded.

file(.stage) struct Stage : little_endian {
    width: u32,
    height: u32,
    foreground: [Tile; width * height],
    collision: [SolidTile; width * height],
    object_count: u32,
    objects: [Object; object_count],
}

struct Tile {
    x: i32,
    y: i32,
    mirror_x: bool,
    mirror_y: bool,
}

enum Solidity : u8 {
    Full,
    Top,
    SidesAndBottom,
}

struct SolidTile {
    x: i32,
    y: i32,
    angle: u16,
    solidity: Solidity,
    mirror_x: bool,
    mirror_y: bool,
}

struct Object {
    class: CString<64>,
    x: i32,
    y: i32,
    userdata: Userdata(class),
}

union Userdata(string) : 1024 {
    "Ring" => {
        mirror_x: bool,
    }
}
